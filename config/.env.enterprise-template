##
# MISP Enterprise Configuration Template
# tKQB Enterprises - Complete .env Configuration Guide
#
# This template provides comprehensive configuration options for enterprise deployments
# including Azure Entra ID (formerly Azure AD), LDAP, SMTP, and security hardening.
#
# Usage:
#   1. Copy this file to /opt/misp/.env
#   2. Uncomment and configure the sections you need
#   3. Update passwords and secrets with strong values
#   4. Restart MISP: cd /opt/misp && docker compose down && docker compose up -d
##

##
# Build-time variables (Required - DO NOT MODIFY unless upgrading)
##

CORE_TAG=v2.5.22
MODULES_TAG=v3.0.2
GUARD_TAG=v1.2
PHP_VER=20220829

PYPI_SETUPTOOLS_VERSION="==80.3.1"
PYPI_SUPERVISOR_VERSION="==4.2.5"

# Advanced Python Package Versions (Optional - only modify for custom builds)
# PYPI_REDIS_VERSION=5.0.0
# PYPI_LIEF_VERSION=0.13.0
# PYPI_PYDEEP2_VERSION=0.5.1
# PYPI_PYTHON_MAGIC_VERSION=0.4.27
# PYPI_MISP_LIB_STIX2_VERSION=3.0.1
# PYPI_MAEC_VERSION=4.1.0.17
# PYPI_MIXBOX_VERSION=1.0.5
# PYPI_CYBOX_VERSION=2.1.0.21
# PYPI_PYMISP_VERSION=2.4.170
# PYPI_MISP_STIX_VERSION=2.4.170

# Advanced Build Configuration (Optional - for custom images)
# Use specific git commits instead of tags (takes precedence over TAG variables)
# CORE_COMMIT=abc123def456
# MODULES_COMMIT=xyz789ghi012
# GUARD_COMMIT=qrs345tuv678

# Build flavors: full (default, all features) or slim (minimal, smaller image)
# CORE_FLAVOR=full
# MODULES_FLAVOR=full

# Running tags for pre-built images (use instead of building from scratch)
# CORE_RUNNING_TAG=v2.5.22
# MODULES_RUNNING_TAG=v3.0.2
# GUARD_RUNNING_TAG=v1.2

##
# Core MISP Settings (Required)
##

# Base URL - MUST match your actual domain/hostname
# Examples:
#   Development: https://misp-dev.example.com
#   Production:  https://misp.example.com
BASE_URL=https://misp.example.com

# Administrator Account
ADMIN_EMAIL=admin@example.com
ADMIN_ORG=YourOrganization
ADMIN_PASSWORD=CHANGE_THIS_STRONG_PASSWORD_NOW

# Security Keys (CRITICAL: Generate strong random values)
# Generate with: openssl rand -base64 32
GPG_PASSPHRASE=CHANGE_THIS_GPG_PASSPHRASE
MYSQL_PASSWORD=CHANGE_THIS_MYSQL_PASSWORD
ENCRYPTION_KEY=CHANGE_THIS_ENCRYPTION_KEY_32_CHARS

##
# Database Configuration (Required)
##

MYSQL_HOST=db
MYSQL_PORT=3306
MYSQL_USER=misp
MYSQL_DATABASE=misp
MYSQL_ROOT_PASSWORD=CHANGE_THIS_ROOT_PASSWORD

# MySQL Performance Tuning (Adjust based on available RAM)
# Recommended: 50-70% of available RAM for dedicated database server
INNODB_BUFFER_POOL_SIZE=2048M
INNODB_CHANGE_BUFFERING=none
INNODB_IO_CAPACITY=1000
INNODB_IO_CAPACITY_MAX=2000
INNODB_LOG_FILE_SIZE=600M
INNODB_READ_IO_THREADS=16
INNODB_WRITE_IO_THREADS=4
INNODB_STATS_PERSISTENT=ON

##
# Redis Configuration (Required)
##

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD
ENABLE_REDIS_EMPTY_PASSWORD=false

##
# Azure Entra ID (formerly Azure AD) Authentication
# Use this for enterprise SSO with Microsoft 365 / Azure AD
#
# Setup Instructions:
#   1. Register MISP app in Azure Portal: portal.azure.com
#   2. Navigate to: Azure Active Directory > App registrations > New registration
#   3. Set Redirect URI: https://YOUR_MISP_URL/users/login
#   4. Create client secret: Certificates & secrets > New client secret
#   5. Configure API permissions: Microsoft Graph > User.Read
#   6. Get values from Overview page: Application (client) ID, Directory (tenant) ID
##

# Enable Azure Entra ID authentication
AAD_ENABLE=false

# Azure AD Application Settings
# Find these in Azure Portal > App registrations > Your MISP app > Overview
AAD_CLIENT_ID=your-application-client-id
AAD_TENANT_ID=your-tenant-id
AAD_CLIENT_SECRET=your-client-secret

# Redirect URI (must match Azure app registration)
AAD_REDIRECT_URI=https://misp.example.com/users/login

# Provider Settings
AAD_PROVIDER=AzureAD
AAD_PROVIDER_USER=AzureAD

# Group-based Role Mapping (Optional - map Azure AD groups to MISP roles)
# AAD_MISP_USER=azure-ad-group-id-for-users
# AAD_MISP_ORGADMIN=azure-ad-group-id-for-org-admins
# AAD_MISP_SITEADMIN=azure-ad-group-id-for-site-admins
AAD_CHECK_GROUPS=false

##
# OIDC (OpenID Connect) Authentication
# Use this for generic OIDC providers (Okta, Auth0, Keycloak, etc.)
##

OIDC_ENABLE=false
# OIDC_PROVIDER_URL=https://login.example.com/realms/misp
# OIDC_CLIENT_ID=misp-client
# OIDC_CLIENT_SECRET=your-oidc-client-secret
# OIDC_CODE_CHALLENGE_METHOD=S256
# OIDC_ROLES_PROPERTY=roles
# OIDC_ROLES_MAPPING={"user":3,"admin":1}
# OIDC_DEFAULT_ORG=1
# OIDC_LOGOUT_URL=https://login.example.com/logout
# OIDC_SCOPES=openid profile email
# OIDC_MIXEDAUTH=true

##
# LDAP Authentication (Apache SecureAuth)
# Use this for Active Directory or other LDAP servers
#
# Setup Instructions:
#   1. Identify your LDAP server (usually domain controller)
#   2. Create a service account with read-only directory access
#   3. Test connection: ldapsearch -H ldaps://dc.example.com -D "cn=service,dc=example,dc=com" -W
#   4. Configure search base DN and filters below
##

# Enable LDAP authentication via Apache
APACHESECUREAUTH_LDAP_ENABLE=false

# LDAP Server Connection
# Examples:
#   ldaps://dc.example.com:636  (SSL/TLS recommended)
#   ldap://dc.example.com:389   (plain LDAP - not recommended for production)
# APACHESECUREAUTH_LDAP_SERVER=ldaps://dc.example.com:636
# APACHESECUREAUTH_LDAP_STARTTLS=true

# LDAP Bind Credentials (service account)
# APACHESECUREAUTH_LDAP_READER_USER=cn=misp-service,ou=ServiceAccounts,dc=example,dc=com
# APACHESECUREAUTH_LDAP_READER_PASSWORD=service-account-password

# LDAP Search Configuration
# APACHESECUREAUTH_LDAP_DN=dc=example,dc=com
# APACHESECUREAUTH_LDAP_SEARCH_FILTER=(objectClass=person)
# APACHESECUREAUTH_LDAP_SEARCH_ATTRIBUTE=sAMAccountName
# APACHESECUREAUTH_LDAP_FILTER=memberOf=cn=MISP-Users,ou=Groups,dc=example,dc=com

# LDAP Apache Environment Variable (usually REMOTE_USER)
# APACHESECUREAUTH_LDAP_APACHE_ENV=REMOTE_USER

# LDAP User Defaults
# APACHESECUREAUTH_LDAP_DEFAULT_ROLE_ID=3
# APACHESECUREAUTH_LDAP_DEFAULT_ORG=1
# APACHESECUREAUTH_LDAP_EMAIL_FIELD=mail

# LDAP Protocol Options
# APACHESECUREAUTH_LDAP_OPT_PROTOCOL_VERSION=3
# APACHESECUREAUTH_LDAP_OPT_NETWORK_TIMEOUT=5
# APACHESECUREAUTH_LDAP_OPT_REFERRALS=0

##
# LDAP Authentication (Native MISP)
# Alternative LDAP implementation - use EITHER ApacheSecureAuth OR LdapAuth, not both
##

LDAPAUTH_ENABLE=false
# LDAPAUTH_LDAPSERVER=ldaps://dc.example.com:636
# LDAPAUTH_LDAPDN=dc=example,dc=com
# LDAPAUTH_LDAPREADERUSER=cn=misp-service,dc=example,dc=com
# LDAPAUTH_LDAPREADERPASSWORD=service-account-password
# LDAPAUTH_LDAPSEARCHFILTER=(objectClass=person)
# LDAPAUTH_LDAPSEARCHATTRIBUTE=sAMAccountName
# LDAPAUTH_LDAPEMAILFIELD=mail
# LDAPAUTH_LDAPNETWORKTIMEOUT=5
# LDAPAUTH_LDAPPROTOCOL=3
# LDAPAUTH_LDAPALLOWREFERRALS=false
# LDAPAUTH_STARTTLS=true
# LDAPAUTH_MIXEDAUTH=true
# LDAPAUTH_LDAPDEFAULTORGID=1
# LDAPAUTH_LDAPDEFAULTROLEID=3
# LDAPAUTH_UPDATEUSER=true
# LDAPAUTH_DEBUG=false
# LDAPAUTH_LDAPTLSREQUIRECERT=demand
# LDAPAUTH_LDAPTLSCUSTOMCACERT=/path/to/ca-cert.pem
# LDAPAUTH_LDAPTLSCRLCHECK=none
# LDAPAUTH_LDAPTLSPROTOCOLMIN=3.3

##
# SMTP / Email Configuration
# Required for notifications, alerts, and user invitations
#
# Supported providers:
#   - Gmail: smtp.gmail.com:587 (requires app password)
#   - Office 365: smtp.office365.com:587
#   - Amazon SES: email-smtp.us-east-1.amazonaws.com:587
#   - Generic SMTP: your-smtp-server.example.com:587
##

# SMTP Relay Settings
# SMARTHOST_ADDRESS=smtp.office365.com
# SMARTHOST_PORT=587
# SMARTHOST_USER=misp-notifications@example.com
# SMARTHOST_PASSWORD=smtp-password-or-app-password

# SMTP Aliases (optional - for sender address rewriting)
# SMARTHOST_ALIASES=*.example.com

# SMTP FQDN (hostname for SMTP HELO)
# SMTP_FQDN=misp.example.com

##
# HTTP Proxy Configuration
# Use if MISP needs to connect to external feeds/APIs through a proxy
##

PROXY_ENABLE=false
# PROXY_HOST=proxy.example.com
# PROXY_PORT=3128
# PROXY_METHOD=http
# PROXY_USER=proxy-username
# PROXY_PASSWORD=proxy-password

##
# S3 / Object Storage Configuration
# Use for storing attachments in AWS S3, MinIO, or compatible storage
##

# S3_BUCKET=misp-attachments
# S3_ENDPOINT=s3.amazonaws.com
# S3_ACCESS_KEY=your-access-key
# S3_SECRET_KEY=your-secret-key

##
# Network / Reverse Proxy Settings
# Configure if MISP is behind a reverse proxy (Nginx, HAProxy, Cloudflare, etc.)
##

# X-Forwarded-For headers (comma-separated trusted proxies)
# NGINX_X_FORWARDED_FOR=X-Forwarded-For
# NGINX_SET_REAL_IP_FROM=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# Maximum upload size
NGINX_CLIENT_MAX_BODY_SIZE=50M

##
# Security Headers and HSTS
# Best practice: Enable HSTS for production deployments with valid SSL
##

DISABLE_IPV6=false
DISABLE_SSL_REDIRECT=false

# HSTS (HTTP Strict Transport Security)
# Recommended: 31536000 (1 year) for production
HSTS_MAX_AGE=31536000

# X-Frame-Options (clickjacking protection)
# Options: DENY, SAMEORIGIN, ALLOW-FROM uri
X_FRAME_OPTIONS=SAMEORIGIN

# Content Security Policy (optional - advanced security)
# CONTENT_SECURITY_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'

##
# PHP Configuration (Performance Tuning)
# Adjust based on workload and available resources
##

# Memory and execution limits
PHP_MEMORY_LIMIT=1024M
PHP_MAX_EXECUTION_TIME=300
PHP_MAX_INPUT_TIME=300

# Upload limits (must be <= NGINX_CLIENT_MAX_BODY_SIZE)
PHP_UPLOAD_MAX_FILESIZE=50M
PHP_POST_MAX_SIZE=50M
PHP_MAX_FILE_UPLOADS=50

# PHP-FPM Pool Configuration (worker processes)
# Adjust based on available CPU cores and RAM
PHP_FCGI_CHILDREN=5
PHP_FCGI_START_SERVERS=2
PHP_FCGI_SPARE_SERVERS=1
PHP_FCGI_MAX_REQUESTS=0

# Session Configuration
PHP_SESSION_TIMEOUT=60
PHP_SESSION_COOKIE_TIMEOUT=10080
PHP_SESSION_DEFAULTS=php
PHP_SESSION_AUTO_REGENERATE=false
PHP_SESSION_CHECK_AGENT=false
PHP_SESSION_COOKIE_SECURE=true
PHP_SESSION_COOKIE_SAMESITE=Lax
# PHP_SESSION_COOKIE_DOMAIN=.example.com

# Timezone (IMPORTANT: Set to your local timezone)
# Examples: America/New_York, Europe/London, Asia/Tokyo
PHP_TIMEZONE=UTC

##
# FastCGI Timeouts (Nginx <-> PHP-FPM)
# Increase for long-running operations (imports, exports, background jobs)
##

FASTCGI_READ_TIMEOUT=300s
FASTCGI_SEND_TIMEOUT=300s
FASTCGI_CONNECT_TIMEOUT=300s
# FASTCGI_STATUS_LISTEN=127.0.0.1:9001

##
# MISP Feature Flags
##

# Enable database-based settings (recommended)
ENABLE_DB_SETTINGS=true

# Enable automatic background updates
ENABLE_BACKGROUND_UPDATES=true

# Disable CA certificate refresh
# DISABLE_CA_REFRESH=false

# Disable printing plaintext credentials in logs (security best practice)
DISABLE_PRINTING_PLAINTEXT_CREDENTIALS=true

##
# Background Workers
# Auto-calculated based on CPU cores, or set manually
# Recommended: Number of CPU cores, minimum 2
##

WORKERS=6

##
# Cron Jobs (Scheduled Tasks)
##

# User ID for cron jobs (1 = admin user)
CRON_USER_ID=1

# Pull all feeds/sync servers (cron schedule format)
# CRON_PULLALL=0 2 * * *

# Push to all sync servers (cron schedule format)
# CRON_PUSHALL=0 3 * * *

##
# Sync Server Configuration
# Configure remote MISP instances for data sharing
##

# Number of sync servers (0 to disable)
SYNCSERVERS=0

# Example sync server configuration (uncomment and modify)
# SYNCSERVERS_1_UUID=remote-org-uuid
# SYNCSERVERS_1_NAME=Partner MISP Instance
# SYNCSERVERS_1_KEY=authentication-key
# SYNCSERVERS_1_URL=https://partner-misp.example.com
# SYNCSERVERS_1_PULL_RULES={"tags":["tlp:white","tlp:green"]}

##
# Port Configuration
# Only needed if you want to change from defaults (80, 443)
##

CORE_HTTP_PORT=80
CORE_HTTPS_PORT=443

##
# Supervisor (Process Manager) Configuration
##

# SUPERVISOR_HOST=localhost:9001
# SUPERVISOR_USERNAME=admin
# SUPERVISOR_PASSWORD=supervisor-password

##
# Debug Mode
# WARNING: Only enable for troubleshooting - never in production!
# Exposes sensitive information in logs and error messages
##

DEBUG=0

##
# Advanced: Custom Attachments Directory
##

# ATTACHMENTS_DIR=/custom/path/to/attachments

##
# Advanced: Admin API Key (optional - for automation)
##

# ADMIN_KEY=your-admin-api-key

##
# Advanced: Admin Organization UUID (optional)
##

# ADMIN_ORG_UUID=organization-uuid

##
# MISP-Guard (Optional Traffic Filtering & Monitoring)
# Enable for API traffic inspection, rate limiting, and audit logging
# See: docs/ADVANCED-FEATURES.md for setup instructions
##

# Enable MISP-Guard (requires docker compose --profile misp-guard up)
# COMPOSE_PROFILES=misp-guard

# Guard Configuration
# GUARD_PORT=8888
# GUARD_ARGS=--set block_global=false --ssl-insecure

##
# Custom Integrations & Scripts
# Mount custom modules and initialization scripts
##

# Custom modules directory (for expansion, import, export, action modules)
# Create these directories and place your custom Python modules:
#   /opt/misp/custom/expansion/       - Enrichment modules
#   /opt/misp/custom/import_mod/      - Import modules
#   /opt/misp/custom/export_mod/      - Export modules
#   /opt/misp/custom/action_mod/      - Workflow action modules

# Custom initialization script path
# Place customize_misp.sh in this directory for custom startup tasks
# CUSTOM_PATH=/opt/misp/files

##
# MISP Modules Configuration
# Configure enrichment, import, and export module URLs
##

# MISP Modules FQDN (default for Docker deployment)
# MISP_MODULES_FQDN=misp-modules:6666

##
# End of Configuration
##
